"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _catchError = require("../catchError");

var _querystring = _interopRequireDefault(require("querystring"));

var _Endpoint = require("../Endpoint");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Fetches access token.
 */
var TokenFetcher =
/*#__PURE__*/
function () {
  /**
   * @ignore
   */
  function TokenFetcher(clientID, clientSecret) {
    _classCallCheck(this, TokenFetcher);

    /**
     * @ignore
     */
    this.clientID = clientID;
    /**
     * @ignore
     */

    this.clientSecret = clientSecret;
  }
  /**
   * Fetches access token.
   *
   * @param {object} params - Form data.
   * @return {Promise}
   */


  _createClass(TokenFetcher, [{
    key: "fetchAccessToken",
    value: function fetchAccessToken(params) {
      return _axios["default"].post(_Endpoint.Token, _querystring["default"].stringify(params), {
        auth: {
          username: this.clientID,
          password: this.clientSecret
        },
        headers: {}
      })["catch"](_catchError.authError);
    }
  }]);

  return TokenFetcher;
}();

exports["default"] = TokenFetcher;